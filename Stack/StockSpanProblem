Link(https://www.naukri.com/code360/problems/stock-span_5243295?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM)
Input: ‘n’ = 7,  ‘prices’ = [100, 80, 60, 70, 60, 75, 85]

Output: [1, 1, 1, 2, 1, 4, 6]

Explanation: 
On the sixth day, when the stock price was 75, 

The span came out to be 4 because the last three prices(plus today) were less than the current or the sixth day's price.

Similarly, we can deduce the remaining results.
Note:
You don’t need to print anything. Just implement the given function

<------------Code -------------->
import java.util.*;
public class Solution {
    public static int[] findStockSpans(int []prices) {
        // Write your code here.
        Stack<Integer> stack=new Stack<>();
         int n=prices.length;
        int ans[]=new int[n];
        ans[0]=1;
        stack.push(0);
        for(int i=1;i<=n-1;i++){
            while(!stack.isEmpty() && prices[i]>prices[stack.peek()]){
                stack.pop();
            }
            
            if(!stack.isEmpty()){
                ans[i]=i-stack.peek();
            }else{
              ans[i]= i+1;
            }
            stack.push(i);
        }
        return ans;
    }
}
